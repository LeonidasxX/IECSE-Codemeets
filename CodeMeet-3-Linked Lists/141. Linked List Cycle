Problem Link:
https://leetcode.com/problems/linked-list-cycle/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        if(!head) return false;
        ListNode* slow=head;
        ListNode* fast=head->next;
        while(slow && fast && slow!=fast){
            slow=slow->next;
            fast=fast->next;
            if(!fast) break;
            fast=fast->next;
        }
        if(!fast) return false;
        return true;
    }
};
